version: '2.1'

services:
    # Build the Data Image from the current folder
    # It contains
    jenkins-discovery-data:
        build: "."
        container_name: "discovery-data"
        image: "inetsoftware/jenkins-discovery-data"
        restart: "always"
        volumes:
            - "/tmp/consul-output:/etc/consul-template/output"
        networks:
            internal-network:

    consul-server:
        container_name: "consul-server"
        image: "voxxit/consul:latest"
        restart: "always"
        hostname: "consul-server"
        ports:
            # - "53:53"
            - "${CONSUL_8400_BIND_HOST}8400:8400"
            - "${CONSUL_8500_BIND_HOST}8500:8500"
            - "${CONSUL_8501_BIND_HOST}8501:8501"
        command: "agent -bootstrap-expect=1 -data-dir /data -server -ui-dir /ui -client=0.0.0.0 -advertise=$HOST_ADDRESS $CONSUL_SERVER_OPTIONS"
        networks:
            internal-network:

    registrator:
        image: "gliderlabs/registrator:latest"
        command: "consul://consul-server:8500"
        container_name: "registrator"
        restart: "always"
        links:
            - "consul-server"
        volumes:
            - "/var/run/docker.sock:/tmp/docker.sock"
        networks:
            internal-network:

    router:
        image: "seges/nginx-consul:1.9.9"
        build: "nginx-consul"
        container_name: "${ROUTER_NAME}"
        restart: "always"
        volumes_from:
            - "jenkins-discovery-data"
        volumes:
            - /etc/letsencrypt/live:/etc/letsencrypt/live:ro
            - /etc/letsencrypt/archive:/etc/letsencrypt/archive:ro
        ports:
            - ${PORT_80}:80
            - ${PORT_443}:443
        environment:
            LETSENCRYPT_CERTIFICATE: "$LETSENCRYPT_CERTIFICATE"
            CURL_AUTH_USER: "$CURL_AUTH_USER"
            CURL_AUTH_PASS: "$CURL_AUTH_PASS"
            CURL_REGISTER: "$CURL_REGISTER"
            CURL_UNREGISTER: "$CURL_UNREGISTER"
            BASE_URL: "$BASE_URL"
            VIRTUAL_PORT: "80"
            VIRTUAL_HOST: "$VIRTUAL_HOST"
            URL_EXTENSION: /
        networks:
            external-network:
            internal-network:

networks:
    external-network:
    internal-network:
